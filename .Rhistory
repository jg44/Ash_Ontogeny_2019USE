ordiellipse(NMDSAll,groups=treeNumbersAll,draw="polygon", col=as.numeric(trtSizeAll), label=FALSE)
trtSizeAll
trtTypeAll <- treatments2018Key$INNOC_TYPE[treeNumbersAll]
trtTypeAll
ordiellipse(NMDSAll,groups=treeNumbersAll,draw="polygon", col=as.numeric(trtTypeAll), label=FALSE)
?ordiellipse
ordibar(NMDSAll,groups=treeNumbersAll,draw="polygon", col=as.numeric(trtTypeAll), label=FALSE)
ordibar(NMDSAll,groups=treeNumbersAll,draw="polygon", col=as.numeric(trtTypeAll), label=FALSE, lwd=2)
trtTypeAll
treeNumbersAll
points(NMDSAll$points, pch=20)
points(NMDSAll$points, pch=20,as.numeric(trtTypeAll))
points(NMDSAll$points, pch=20, col=as.numeric(trtTypeAll))
NMDSAll$points
as.numeric(trtTypeAll)
ordiplot(NMDSAll, main="Pre- v. post")
ordiellipse(NMDSAll,groups=prePost,draw="polygon",col=c("dark green",4), label=TRUE)
ordiplot(NMDSAll, main="Pre- v. post")
points(NMDSAll$points, pch=20, col=as.numeric(trtTypeAll))
ordibar(NMDSAll,groups=treeNumbersAll,draw="polygon", col=as.numeric(trtTypeAll), label=FALSE, lwd=2)
points(NMDSAll$points, pch=20, col=as.numeric(trtTypeAll), cex=4)
ordibar(NMDSAll,groups=treeNumbersAll,draw="polygon", col=as.numeric(trtTypeAll), label=TRUE, lwd=2)
ordiplot(NMDSAll, main="Pre- v. post", type = text)
ordiplot(NMDSAll, main="Pre- v. post", type = "text")
ordiplot(NMDSAll, main="Pre- v. post", type = "text", choices = "sites")
ordiplot(NMDSAll, main="Pre- v. post", type = "text", display = "sites")
x11(12,12)
ordiplot(NMDSAll, main="Pre- v. post", type = "text", display = "sites")
ordibar(NMDSAll,groups=treeNumbersAll,draw="polygon", col=as.numeric(trtTypeAll), label=TRUE, lwd=.5)
ordiplot(NMDSAll, main="Pre- v. post", type = "text", display = "sites")
ordibar(NMDSAll,groups=treeNumbersAll,draw="polygon", col=as.numeric(trtTypeAll), label=F, lwd=.5)
trtTypeAll
?ordibar
ordiplot(NMDSAll, main="Pre- v. post", type = "text", display = "sites")
ordibar(NMDSAll,groups=treeNumbersAll,draw="polygon", show.groups = TRUE, label=F, lwd=.5)
ordibar(NMDSAll,groups=treeNumbersAll,draw="polygon", label=F, lwd=.5)
ordibar(NMDSAll,groups=treeNumbersAll,draw="polygon", col=as.numeric(trtTypeAll), label=F, lwd=.5)
trtTypeAll
which(trtTypeAll=="control")
trtTypeAll
ordiellipse(NMDSAll,groups=prePost,draw="lines",col=c("dark green",4), label=TRUE)
ordibar(NMDSAll,groups=treeNumbersAll,draw="lines", col=as.numeric(trtTypeAll), label=F, lwd=.5)
ordiplot(NMDSAll, main="Pre- v. post")
points(NMDSAll$points, pch=20, col=as.numeric(trtTypeAll), cex=4)
ordibar(NMDSAll,groups=treeNumbersAll,draw="lines", col=as.numeric(trtTypeAll), label=F, lwd=.5)
ordiplot(NMDSAll, main="Pre- v. post")
ordiplot(NMDSAll, main="Pre- v. post", type = "text", display = "sites")
ordibar(NMDSAll,groups=treeNumbersAll,draw="lines", col=as.numeric(trtTypeAll), label=F, lwd=.5)
ordiellipse(NMDSAll,groups=treeNumbersAll,draw="lines", col=as.numeric(trtTypeAll), label=F, lwd=.5)
ordiplot(NMDSAll, main="Pre- v. post", type = "text", display = "sites")
ordiellipse(NMDSAll,groups=treeNumbersAll,draw="lines", col=as.numeric(trtTypeAll), label=F, lwd=.5)
ordiellipse(NMDSAll,groups=treeNumbersAll,draw="lines", col=as.numeric(trtTypeAll), label=F, lwd=.5, conf=.6)
ordiplot(NMDSAll, main="Pre- v. post", type = "text", display = "sites")
ordiellipse(NMDSAll,groups=treeNumbersAll,draw="lines", col=as.numeric(trtTypeAll), label=F, lwd=.5, conf=.999)
ordiplot(NMDSAll, main="Pre- v. post", type = "text", display = "sites")
ordiellipse(NMDSAll,groups=treeNumbersAll,draw="lines", col=as.numeric(trtTypeAll), label=F, lwd=.5, conf=.5)
ordiellipse(NMDSAll,groups=treeNumbersAll,draw="lines", col=as.numeric(trtTypeAll), label=F, lwd=.5, conf=.15)
ordiellipse(NMDSAll,groups=treeNumbersAll,draw="lines", col=as.numeric(trtTypeAll), label=F, lwd=2.5, conf=.15)
ordiellipse(NMDSAll,groups=treeNumbersAll,draw="lines", col=as.numeric(trtTypeAll), label=F, lwd=2.5, conf=.4)
ordiellipse(NMDSAll,groups=treeNumbersAll,draw="lines", col=as.numeric(trtTypeAll), label=F, lwd=2.5, conf=.2)
ordiplot(NMDSAll, main="Pre- v. post", type = "text", display = "sites")
ordiellipse(NMDSAll,groups=treeNumbersAll,draw="lines", col=as.numeric(trtTypeAll), label=F, lwd=2.5, conf=.2)
ordiellipse(NMDSAll,groups=treeNumbersAll,draw="lines", col=as.numeric(trtTypeAll), label=F, lwd=2.5, conf=.25)
ordiellipse(NMDSAll,groups=treeNumbersAll,draw="lines", col=as.numeric(trtTypeAll), label=F, lwd=2.5, conf=.22)
ordiellipse(NMDSAll,groups=treeNumbersAll,draw="lines", col=as.numeric(trtTypeAll), label=F, lwd=2.5, conf=.22)
ordiplot(NMDSAll, main="Pre- v. post", type = "text", display = "sites")
ordiellipse(NMDSAll,groups=treeNumbersAll,draw="lines", col=as.numeric(trtTypeAll), label=F, lwd=2.5, conf=.22)
which(trtTypeAll=="control")
treatments2018Key
NMDSAll$points
NMDSAll$points
str(NMDSAll$points)
treatments2018Key
rownames(NMDSAll$points)
as.numeric(rownames(NMDSAll$points))
treatments2018Key$INNOC_TYPE
as.numeric(rownames(NMDSAll$points))
treatments2018Key$INNOC_TYPE[as.numeric(rownames(NMDSAll$points))]
trtTypeAll
points(NMDSAll$points, pch=20, col=as.numeric(trtTypeAll), cex=4)
points(NMDSAll$points, pch=20, col=as.numeric(trtTypeAll), cex=4)
ordiellipse(NMDSAll,groups=treeNumbersAll,draw="lines", col=1, label=F, lwd=2.5, conf=.22)
points(NMDSAll$points, pch=20, col=as.numeric(trtTypeAll), cex=4)
trtSizeAll
trtSizeAll <- factor(treatments2018Key$DBHtrt[treeNumbersAll], levels = c("S", "SM", "ML", "L"))
trtSizeAll
points(NMDSAll$points, pch=20, col=as.numeric(trtTypeAll), cex=trtSizeAll)
hordiplot(NMDSAll, main="Pre- v. post", type = "text", display = "sites")
points(NMDSAll$points, pch=20, col=as.numeric(trtTypeAll), cex=trtSizeAll)
points(NMDSAll$points, pch=20, col=as.numeric(trtTypeAll), cex=as.numeric(trtSizeAll))
hordiplot(NMDSAll, main="Pre- v. post", type = "text", display = "sites")
ordiellipse(NMDSAll,groups=treeNumbersAll,draw="lines", col=1, label=F, lwd=2.5, conf=.22)
points(NMDSAll$points, pch=20, col=as.numeric(trtTypeAll), cex=as.numeric(trtSizeAll))
as.numeric(trtSizeAll)
length(as.numeric(trtSizeAll))
nrow(NMDSAll)
nrow(NMDSAll$points)
as.numeric(trtSizeAll)
points(NMDSAll$points, pch=20, col=as.numeric(trtTypeAll), cex=as.numeric(trtSizeAll))
hordiplot(NMDSAll, main="Pre- v. post", type = "text", display = "sites")
ordiplot(NMDSAll, main="Pre- v. post", type = "text", display = "sites")
points(NMDSAll$points, pch=20, col=as.numeric(trtTypeAll), cex=as.numeric(trtSizeAll))
ordiellipse(NMDSAll,groups=treeNumbersAll,draw="lines", col=1, label=F, lwd=2.5, conf=.22)
?ordiplot
ordiplot(NMDSAll, main="Pre- v. post", type = "none", display = "sites")
points(NMDSAll$points, pch=20, col=as.numeric(trtTypeAll), cex=as.numeric(trtSizeAll))
ordiellipse(NMDSAll,groups=treeNumbersAll,draw="lines", col=1, label=F, lwd=2.5, conf=.22)
points(NMDSAll$points, pch=20, col=as.numeric(trtTypeAll), cex=as.numeric(trtSizeAll))
legend("topleft", fill=TRUE, col=1:3, legend=levels(trtTypeAll))
legend("topleft", fill=1:3, col=1:3, legend=levels(trtTypeAll))
ordiplot(NMDSAll, main="Pre- v. post", type = "text", display = "sites")
ordiellipse(NMDSAll,groups=treeNumbersAll,draw="lines", col=1, label=F, lwd=2.5, conf=.22)
points(NMDSAll$points, pch=20, col=as.numeric(trtTypeAll), cex=as.numeric(trtSizeAll))
legend("topleft", fill=1:3, col=1:3, legend=levels(trtTypeAll))
legend("topleft", fill=1:3, col=1:3, legend=levels(trtTypeAll), cex=2)
ordiplot(NMDSAll, main="Pre- v. post", type = "text", display = "sites")
ordiellipse(NMDSAll,groups=treeNumbersAll,draw="lines", col=1, label=F, lwd=2.5, conf=.22)
points(NMDSAll$points, pch=20, col=as.numeric(trtTypeAll), cex=as.numeric(trtSizeAll))
ordiplot(NMDSAll, main="Pre- v. post", type = "none", display = "sites")
ordiellipse(NMDSAll,groups=treeNumbersAll,draw="lines", col=1, label=F, lwd=2.5, conf=.22)
points(NMDSAll$points, pch=20, col=as.numeric(trtTypeAll), cex=as.numeric(trtSizeAll))
legend("topleft", fill=1:3, col=1:3, legend=levels(trtTypeAll), cex=2)
ordiplot(NMDSAll, main="Pre- v. post")
x11(12,12)
par(mfrow=c(2,2))
ordiplot(NMDSAll, main="Pre- v. post")
ordiellipse(NMDSAll,groups=prePost,draw="polygon",col=c("dark green",4), label=TRUE)
ordiplot(NMDSAll, main="Pre- v. post")
points(NMDSAll$points, pch=20, col=as.numeric(trtTypeAll), cex=as.numeric(trtSizeAll))
ordiplot(NMDSAll, main="Pre- v. post", type = "none", display = "sites")
ordiellipse(NMDSAll,groups=treeNumbersAll,draw="lines", col=1, label=F, lwd=2.5, conf=.22)
points(NMDSAll$points, pch=20, col=as.numeric(trtTypeAll), cex=as.numeric(trtSizeAll))
legend("topleft", fill=1:3, col=1:3, legend=levels(trtTypeAll), cex=2)
x11(12,7)
par(mfrow=c(1,2))
ordiplot(NMDSAll, main="Pre- v. post")
ordiellipse(NMDSAll,groups=prePost,draw="polygon",col=c("dark green",4), label=TRUE)
ordiplot(NMDSAll, main="Pre- v. post")
ordiplot(NMDSAll, main="Pre- v. post", type = "none", display = "sites")
ordiellipse(NMDSAll,groups=treeNumbersAll,draw="lines", col=1, label=F, lwd=2.5, conf=.22)
points(NMDSAll$points, pch=20, col=as.numeric(trtTypeAll), cex=as.numeric(trtSizeAll))
legend("topleft", fill=1:3, col=1:3, legend=levels(trtTypeAll), cex=2)
ordiplot(NMDSAll, main="Pre- v. post")
ordiellipse(NMDSAll,groups=prePost,draw="polygon",col=c("dark green",4), label=TRUE)
treatments2018Key$INNOC_TYPE[as.numeric(rownames(NMDSAll$points))]
ordiplot(NMDSAll, main="Pre- v. post", type = "none", display = "sites")
ordiellipse(NMDSAll,groups=treeNumbersAll,draw="lines", col=1, label=F, lwd=2.5, conf=.22)
points(NMDSAll$points, pch=20, col=as.numeric(trtTypeAll), cex=as.numeric(trtSizeAll))
legend("topleft", fill=1:3, col=1:3, legend=levels(trtTypeAll), cex=2)
ordiplot(NMDSAll, main="Pre- v. post", type = "none", display = "sites")
A
A
A
A
ordiplot(NMDSAll, main="Pre- v. post")
ordiellipse(NMDSAll,groups=prePost,draw="polygon",col=c("dark green",4), label=TRUE)
treatments2018Key$INNOC_TYPE[as.numeric(rownames(NMDSAll$points))]
ordiplot(NMDSAll, main="Pre- v. post", type = "none", display = "sites")
ordiellipse(NMDSAll,groups=treeNumbersAll,draw="lines", col=1, label=F, lwd=2.5, conf=.22)
points(NMDSAll$points, pch=20, col=as.numeric(trtTypeAll), cex=as.numeric(trtSizeAll))
legend("topleft", fill=1:3, col=1:3, legend=levels(trtTypeAll), cex=2)
legend("topleft", fill=1:3, col=1:3, legend=levels(trtTypeAll), cex=1.62)
ordiplot(NMDSAll, main="Pre- v. post")
ordiellipse(NMDSAll,groups=prePost,draw="polygon",col=c("dark green",4), label=TRUE)
#ordiplot(NMDSAll, main="Pre- v. post")
# points(NMDSAll$points, pch=20, col=as.numeric(trtTypeAll), cex=as.numeric(trtSizeAll))
treatments2018Key$INNOC_TYPE[as.numeric(rownames(NMDSAll$points))]
ordiplot(NMDSAll, main="Pre- v. post", type = "none", display = "sites")
ordiellipse(NMDSAll,groups=treeNumbersAll,draw="lines", col=1, label=F, lwd=2.5, conf=.22)
points(NMDSAll$points, pch=20, col=as.numeric(trtTypeAll), cex=as.numeric(trtSizeAll))
legend("topleft", fill=1:3, col=1:3, legend=levels(trtTypeAll), cex=1.62)
x11(14,7)
par(mfrow=c(1,2))
ordiplot(NMDSAll, main="Pre- v. post")
ordiellipse(NMDSAll,groups=prePost,draw="polygon",col=c("dark green",4), label=TRUE)
#ordiplot(NMDSAll, main="Pre- v. post")
# points(NMDSAll$points, pch=20, col=as.numeric(trtTypeAll), cex=as.numeric(trtSizeAll))
treatments2018Key$INNOC_TYPE[as.numeric(rownames(NMDSAll$points))]
ordiplot(NMDSAll, main="Pre- v. post", type = "none", display = "sites")
ordiellipse(NMDSAll,groups=treeNumbersAll,draw="lines", col=1, label=F, lwd=2.5, conf=.22)
points(NMDSAll$points, pch=20, col=as.numeric(trtTypeAll), cex=as.numeric(trtSizeAll))
legend("topleft", fill=1:3, col=1:3, legend=levels(trtTypeAll), cex=1.62)
par(mfrow=c(1,2))
ordiplot(NMDSAll, main="Pre- v. post")
ordiellipse(NMDSAll,groups=prePost,draw="polygon",col=c("dark green",4), label=TRUE)
#ordiplot(NMDSAll, main="Pre- v. post")
# points(NMDSAll$points, pch=20, col=as.numeric(trtTypeAll), cex=as.numeric(trtSizeAll))
treatments2018Key$INNOC_TYPE[as.numeric(rownames(NMDSAll$points))]
ordiplot(NMDSAll, main="Pre- v. post", type = "none", display = "sites")
ordiellipse(NMDSAll,groups=treeNumbersAll,draw="lines", col=1, label=F, lwd=1.8, conf=.22)
points(NMDSAll$points, pch=20, col=as.numeric(trtTypeAll), cex=as.numeric(trtSizeAll))
legend("topleft", fill=1:3, col=1:3, legend=levels(trtTypeAll), cex=1.62)
.devpdf("comparing pre and post 2018")
.devpdf
.devpdf("comparing pre and post 2018", png=TRUE, overwrite = TRUE)
treatments2018Key
treatments2018Key$preYN[treeNumbersAll]
pretreatments2018Key$preYN[treeNumbersAll]
x11()
ordiplot(NMDS)
ordihull(NMDS,groups=trtSizeSL,draw="polygon",col=3:4,label=F)
ordiplot(NMDS)
ordiellipse(NMDS,groups=trtSize,draw="polygon",col=c("dark green",4, 2, "yellow"))
ordiellipse(NMDS,groups=trtSize,draw="polygon",col=c("dark green",4, 2, "yellow"), label=TRUE)
treatments2018Key
trtSize <- treatments2018Key[.nn(rownames(NMDS$points))]$preYN
trtSize <- treatments2018Key[.nn(rownames(NMDS$points))]$DBHtrt
preYN <- treatments2018Key[.nn(rownames(NMDS$points))]$preYN
ordiellipse(NMDS,groups=preYN,draw="polygon",col=c("dark green",4, 2, "yellow"), label=TRUE)
ordiplot(NMDS)
ordiellipse(NMDS,groups=preYN,draw="polygon",col=c("dark green","dark red"), label=TRUE)
preYN
ordiplot(NMDS_post, main="Post samples where pre samples were and were not taken", type = "none", display = "sites")
ordiellipse(NMDS_post,groups=preYN,draw="lines", col=1, label=F, lwd=1.8, conf=.22)
NMDS_post
presamplesMerged
treatments2018Key[.nn(gsub("X", "", rownames(comm_postCompound))), ]$preYN
trtPreYN2019 <- treatments2018Key[.nn(gsub("X", "", rownames(comm_postCompound))), ]$preYN
ordiellipse(NMDS_post,groups=trtPreYN2019,draw="lines", col=1, label=F, lwd=1.8, conf=.22)
ordiplot(NMDS_post, main="Post samples where pre samples were and were not taken", type = "none", display = "sites")
ordiellipse(NMDS_post,groups=trtPreYN2019,draw="lines", col=1, label=F, lwd=1.8, conf=.22)
ordiellipse(NMDS_post,groups=trtPreYN2019,draw="ellipse", col=1, label=F, lwd=1.8, conf=.22)
ordiellipse(NMDS_post,groups=trtPreYN2019,draw="polygon", col=c("dark green" "light blue"), label=F, lwd=1.8, conf=.22)
ordiellipse(NMDS_post,groups=trtPreYN2019,draw="polygon", col=c("dark green" "light blue"), label=T, lwd=1.8, conf=.22)
trtPreYN2019
ordiplot(NMDS_post, main="Post samples where pre samples were and were not taken", type = "none", display = "sites")
NMDS_post
NMDS_post$points
nrow(NMDS_post$points)
.l(trtPreYN2019)
trtPreYN2019
.l(trtPreYN2019)
.l
length(trtPreYN2019)
ordiellipse(NMDS_post,groups=trtPreYN2019,draw="polygon", col=c("dark green", "light blue"), label=T, lwd=1.8, conf=.22)
ordiellipse(NMDS_post,groups=trtPreYN2019,draw="polygon", col=c("dark green", "dark red"), label=T, lwd=1.8, conf=.22)
ordiplot(NMDS_post, main="Post samples where pre samples were and were not taken", type = "points", display = "sites")
ordiplot(NMDS_post, main="Post samples where pre samples were and were not taken", type = "points")
ordiellipse(NMDS_post,groups=trtPreYN2019,draw="polygon", col=c("dark green", "dark red"), label=T, lwd=1.8, conf=.22)
ordiplot(NMDS_post, main="Post samples where pre samples were and were not taken", type = "none")
trtTypeAll
.nn(rownames(NMDS$points))
rownames(NMDS_post$points)
gsub("X", "", rownames(NMDS_post$points))
.nn(gsub("X", "", rownames(NMDS_post$points)))
treeNumPost <- .nn(gsub("X", "", rownames(NMDS_post$points)))
treeNumPost
trtTypePost <-
treatments2018Key$preYN[treeNumPost]
trtTypePost
treatments2018Key$preYN[treeNumPost]
trtTypePost <- treatments2018Key$INNOC_TYPE[treeNumPost]
trtTypePost
trtSizePost <- treatments2018Key$DBHtrt[treeNumPost]
trtSizePost
trtpreYNPost <- treatments2018Key$preYN[treeNumPost]
trtpreYNPost
trytyvexPost <- treatments2018Key$tyvexYN[treeNumPost]
points(NMDSAll$points, pch=20, col=as.numeric(trtTypePostPost), cex=as.numeric(trtSizePost))
points(NMDSAll$points, pch=20, col=as.numeric(trtTypePost), cex=as.numeric(trtSizePost))
ordiplot(NMDS_post, main="Post samples where pre samples were and were not taken", type = "sites")
ordiplot(NMDS_post, main="Post samples where pre samples were and were not taken", type = "none")
points(NMDSAll$points, pch=20, col=as.numeric(trtTypePost), cex=as.numeric(trtSizePost))
points(NMDS_post$points, pch=20, col=as.numeric(trtTypePost), cex=as.numeric(trtSizePost))
ordiplot(NMDS_post, main="Post samples where pre samples were and were not taken", type = "none")
points(NMDS_post$points, pch=20, col=as.numeric(trtTypePost), cex=as.numeric(trtSizePost))
ordiellipse(NMDS_post,groups=trtPreYN2019,draw="polygon", col=c("dark green", "dark red"), label=T, lwd=1.8, conf=.22)
ordiellipse(NMDS_post,groups=trtPreYN2019,draw="polygon", col=c("dark green", "dark red"), label=T, lwd=1.8)
ordiplot(NMDS_post, main="Post samples where pre samples were and were not taken", type = "none")
points(NMDS_post$points, pch=20, col=as.numeric(trtTypePost), cex=as.numeric(trtSizePost))
ordiellipse(NMDS_post,groups=trtPreYN2019,draw="polygon", col=c("dark green", "dark red"), label=T, lwd=1.8)
ordiplot(NMDSAll, main="Pre- v. post", type = "none", display = "sites")
ordiellipse(NMDSAll,groups=treeNumbersAll,draw="lines", col=1, label=F, lwd=1.8, conf=.22)
points(NMDSAll$points, pch=20, col=as.numeric(trtTypeAll), cex=as.numeric(trtSizeAll))
legend("topleft", fill=1:3, col=1:3, legend=levels(trtTypeAll), cex=1.62)
ordiplot(NMDS_post, main="Post samples where pre samples were and were not taken", type = "none")
points(NMDS_post$points, pch=20, col=as.numeric(trtTypePost), cex=as.numeric(trtSizePost))
ordiellipse(NMDS_post,groups=trtPreYN2019,draw="polygon", col=c("dark green", "dark red"), label=T, lwd=1.8)
ordiellipse(NMDS_post,groups=trtPreYN2019,draw="polygon", col=c("dark green", "dark red"), label=T, lwd=1.8, conf=.99)
ordiellipse(NMDS_post,groups=trtPreYN2019,draw="polygon", col=c("dark green", "dark red"), label=T, lwd=1.8, conf=.95)
ordiplot(NMDS_post, main="Post samples where pre samples were and were not taken", type = "none")
points(NMDS_post$points, pch=20, col=as.numeric(trtTypePost), cex=as.numeric(trtSizePost))
ordiellipse(NMDS_post,groups=trtPreYN2019,draw="polygon", col=c("dark green", "dark red"), label=T, lwd=1.8, conf=.95)
?ordiellipse
ordiellipse(NMDS_post,groups=trtPreYN2019,draw="polygon", col=c("dark green", "dark red"), label=T, lwd=1.8, conf=.9)
ordiellipse(NMDS_post,groups=trtPreYN2019,draw="polygon", col=c("dark green", "dark red"), label=T, lwd=1.8, conf=.8)
ordiplot(NMDS_post, main="Post samples where pre samples were and were not taken", type = "none")
points(NMDS_post$points, pch=20, col=as.numeric(trtTypePost), cex=as.numeric(trtSizePost))
ordiellipse(NMDS_post,groups=trtPreYN2019,draw="polygon", col=c("dark green", "dark red"), label=T, lwd=1.8, conf=.8)
ordiellipse(NMDS_post,groups=trtPreYN2019,draw="polygon", col=c("dark green", "dark red"), label=T, lwd=1.8)
ordiellipse(NMDS_post,groups=trtPreYN2019,draw="polygon", col=c("dark green", "dark red"), label=T, lwd=1.8, conf=.5)
ordiellipse(NMDS_post,groups=trtPreYN2019,draw="polygon", col=c("dark green", "dark red"), label=T, lwd=1.8, conf=.6)
ordiellipse(NMDS_post,groups=trtPreYN2019,draw="polygon", col=c("dark green", "dark red"), label=T, lwd=1.8)
ordiplot(NMDS_post, main="Post samples where pre samples were and were not taken", type = "none")
points(NMDS_post$points, pch=20, col=as.numeric(trtTypePost), cex=as.numeric(trtSizePost))
ordiellipse(NMDS_post,groups=trtPreYN2019,draw="polygon", col=c("dark green", "dark red"), label=T, lwd=1.8)
ordiplot(NMDS_post, main="Post samples where pre samples were and were not taken")
points(NMDS_post$points, pch=20, col=as.numeric(trtTypePost), cex=as.numeric(trtSizePost))
ordiellipse(NMDS_post,groups=trtPreYN2019,draw="polygon", col=c("dark green", "dark red"), label=T, lwd=1.8)
ordiellipse(NMDS_post,groups=trtPreYN2019,draw="polygon", col=c("dark green", "dark red"), label=T, lwd=1.8)
ordiplot(NMDS_post, main="Post samples where pre samples were and were not taken")
points(NMDS_post$points, pch=20, col=as.numeric(trtTypePost), cex=as.numeric(trtSizePost))
ordiellipse(NMDS_post,groups=trtPreYN2019,draw="polygon", col=c("dark green", "dark red"), label=T, lwd=1.8)
legend("topleft", fill=1:3, col=1:3, legend=levels(trtTypeAll), cex=1.62)
legend("bottomright", fill=1:3, col=1:3, legend=levels(trtTypeAll), cex=1.62)
ordiplot(NMDS_post, main="Post samples where pre samples were and were not taken")
points(NMDS_post$points, pch=20, col=as.numeric(trtTypePost), cex=as.numeric(trtSizePost))
ordiellipse(NMDS_post,groups=trtPreYN2019,draw="polygon", col=c("dark green", "dark red"), label=T, lwd=1.8)
legend("bottomright", fill=1:3, col=1:3, legend=levels(trtTypeAll), cex=1.62)
trttyvexPost <- treatments2018Key$tyvexYN[treeNumPost]
ordiellipse(NMDS_post,groups=trttyvexPost,draw="polygon", col=c("dark green", "dark red"), label=T, lwd=1.8)
legend("bottomright", fill=1:3, col=1:3, legend=levels(trtTypeAll), cex=1.62)
ordiplot(NMDS_post, main="Post samples where pre samples were and were not taken")
points(NMDS_post$points, pch=20, col=as.numeric(trtTypePost), cex=as.numeric(trtSizePost))
ordiellipse(NMDS_post,groups=trttyvexPost,draw="polygon", col=c("dark green", "dark red"), label=T, lwd=1.8)
legend("bottomright", fill=1:3, col=1:3, legend=levels(trtTypeAll), cex=1.62)
x11(14,7)
par(mfrow=c(1,2))
ordiplot(NMDS_post, main="Post samples where pre samples were and were not taken")
points(NMDS_post$points, pch=20, col=as.numeric(trtTypePost), cex=as.numeric(trtSizePost))
legend("bottomright", fill=1:3, col=1:3, legend=levels(trtTypeAll), cex=1.62)
ordiplot(NMDS_post, main="Post samples where pre samples were and were not taken")
ordiellipse(NMDS_post,groups=trtPreYN2019,draw="polygon", col=c("dark green", "dark red"), label=T, lwd=1.8)
points(NMDS_post$points, pch=20, col=as.numeric(trtTypePost), cex=as.numeric(trtSizePost))
ordiellipse(NMDS_post,groups=trttyvexPost,draw="polygon", col=c("dark green", "dark red"), label=T, lwd=1.8)
legend("bottomright", fill=1:3, col=1:3, legend=levels(trtTypeAll), cex=1.62)
ordiplot(NMDS_post, main="Post samples where pre samples were and were not taken")
points(NMDS_post$points, pch=20, col=as.numeric(trtTypePost), cex=as.numeric(trtSizePost))
ordiellipse(NMDS_post,groups=trtPreYN2019,draw="polygon", col=c("dark green", "dark red"), label=T, lwd=1.8)
ordiplot(NMDS_post, main="Post samples where pre samples were and were not taken")
points(NMDS_post$points, pch=20, col=as.numeric(trtTypePost), cex=as.numeric(trtSizePost))
ordiellipse(NMDS_post,groups=trttyvexPost,draw="polygon", col=c("dark green", "dark red"), label=T, lwd=1.8)
legend("bottomright", fill=1:3, col=1:3, legend=levels(trtTypeAll), cex=1.62)
ordiplot(NMDS_post, main="Post samples where pre samples were and were not taken")
points(NMDS_post$points, pch=20, col=as.numeric(trtTypePost), cex=as.numeric(trtSizePost))
ordiellipse(NMDS_post,groups=trtPreYN2019,draw="polygon", col=c("dark green", "dark red"), label=T, lwd=1.8)
ordiplot(NMDS_post, main="Post samples where Tyvex was or was not used")
points(NMDS_post$points, pch=20, col=as.numeric(trtTypePost), cex=as.numeric(trtSizePost))
ordiellipse(NMDS_post,groups=trttyvexPost,draw="polygon", col=c("dark green", "dark red"), label=T, lwd=1.8)
legend("bottomright", fill=1:3, col=1:3, legend=levels(trtTypeAll), cex=1.62)
.devpdf("comparing post with pre and tyvex", png=TRUE, overwrite = TRUE)
source("/Users/jrg1035/Dropbox/R/myfunctions/functionlist.r")
com
names(com)[1] <- "Compound"
(comClasses <- .read.csv.dt("./data/ontogeny result 1 18.08 Heath for R compound CLASSES.csv", header=T))
treekey <- .read.csv.dt("./data/treeSampleMatchKeyPilotPre1.csv", header=TRUE)
treatments2018Key <- .read.csv.dt("./data/randomization scheme ontogenyUSETHISONE.csv")
treatments2018Key[preYN=="Y" & process!="", table(tyvexYN, INNOC_TYPE, DBHtrt)]
names(treekey)[1]<-"treeID"
# get treatment and key for our tree #
matchKey <- .read.csv.dt("./data/treeSampleMatchKeyPilotPreUSE.csv")
matchKey_coldesc <- .read.csv.dt("./data/treeSampleMatchKeyPilotPreUSE_dataDictionary.csv")
matchKey_coldesc
sampleInFeb2019 <- c(3,4,5,6,8,11,13,14,16,18,21,25,28,31,32,34,35,41,42,43,44,46)  #23 and 40 missing (see 32) I found most of your samples, except for: 23, 32 and 40.  There are other samples with the same number (32 and 40) but they are labeled like this: 32.2, 32.5, 41.1, 41.11 and 41.11A. 
substituteForMissing <- c(47, 24) # and select 32.2
treatments2018Key[c(sampleInFeb2019,substituteForMissing), table(INNOC_TYPE, paste(DBHtrt, tyvexYN))]
treekey
com
samplesIDshrt <-
as.character(t(com[1,4:15]))
samplesIDshrt
#
samplesIDshrt <-  gsub("X|iih", "", names(com[,4:15]))
commat <- t(as.matrix(data.frame(lapply((com[-1,4:15]), function(x) { as.numeric(gsub("%", "", x))}))))
commat
commatClasses <- (as.matrix(data.frame(lapply((comClasses[,3:10]), function(x) { as.numeric(gsub("%", "", x))}))))
commatClasses <- (as.matrix(data.frame(lapply((comClasses[,3:10]), function(x) { as.numeric(gsub("%", "", x))}))))
commatClasses
dimnames(commatClasses)[[1]] <- trtSize
dimnames(commat) <- list( samplesIDshrt , com$V1[-1] )
dimnames(commat) <- list( trtSize , com$V1[-1] )
princomp(t(commat))
NMDS <- metaMDS(commat, k = 2, trymax = 450, engine = "monoMDS", weakties = TRUE, stress = 1, noshare=.1,
maxit=2000, scaling = TRUE, pc = TRUE, smin = 1e-4, sfgrmin = 1e-7,
sratmax=0.999999, zerodist="add")
library(vegan)
NMDS <- metaMDS(commat, k = 2, trymax = 450, engine = "monoMDS", weakties = TRUE, stress = 1, noshare=.1,
maxit=2000, scaling = TRUE, pc = TRUE, smin = 1e-4, sfgrmin = 1e-7,
sratmax=0.999999, zerodist="add")
str(commat)
stressplot(NMDS)
plot(NMDS)
as.numeric(gsub("iih", "", row.names(commat)))
sizeLevels <- factor(gsub("iih", "", row.names(commat)), levels=c("S", "SM", "ML", "L"))
trtSize <- treekey[as.numeric(sizeLevels), get("DBHtrt")]
trtSize<0
treatments2018Key
orditorp(NMDS,display="sites",cex=1.25,air=0.01, col=1)
trtSize1 <- as.numeric(trtSize)
orditorp(NMDS,display="species",col="red",air=0.01)
trtSize1 <- as.numeric(trtSize)
trtSizeSL <- c("S", "L")[as.numeric(trtSize1>3)+1]
trtSize
trtSize1
c("S", "L")[as.numeric(trtSize1>3)+1]
trtSize1
as.numeric(trtSize1>3)+1
trtSizeSL <- c("S", "L")[as.numeric(trtSize1>3)+1]
trtSize <- treatments2018Key[.nn(rownames(NMDS$points))]$DBHtrt
trtSize
trtSizeSL
trtSizeSL <- factor(gsub("M", "", trtSize), levels=c("S", "L"))
trtSizeSL
trtSize
trtSize <- treekey[as.numeric(sizeLevels), get("DBHtrt")]
trtSize
sizeLevels
trtSizeSL <- factor(gsub("M", "", sizeLevels), levels=c("S", "L"))
trtSizeSL
treatments2018Key[.nn(rownames(NMDS$points))]$preYN
install.packages("devtools")
library("devtools")
devtools::install_github("klutometis/roxygen")
install.packages("devtools")
install.packages("devtools")
library("devtools")
devtools::install_github("klutometis/roxygen")
.bu("/Users/jrg1035/Dropbox/R/myfunctions/functionlist.r")
.openRprofile()
setwd("C:/Users/jrg1035/Dropbox/R/myfunctions/JGTools/")
setwd("C:/Users/jrg1035/Dropbox/R/myfunctions/JGTools/")
getwd()
install.packages("roxygen2")
library(roxygen2)
setwd("C:/Users/jrg1035/Dropbox/R/myfunctions/JGTools/")
getwd()
ff<- "ajf/sgs/"
ff<- "ajf/sgs/"
ff
length(grep("/", ff))==0
length(grep("/", ff)
)
ff
datadir= "./data/"
grepl("*/$",datadir);
datadir= "./data"
grepl("*/$",datadir);
.read.csv.dt<-function(file, datadir= "./data/", sep=",", header=TRUE){
require(data.table)
if grepl("*/$",datadir) file <- paste0(datadir, "/", file)
if (length(grep("/", file))==0) file <- paste0(datadir, file)
tmp <- data.table(read.csv(file, sep=sep, header=header, fileEncoding="UTF-8-BOM"))
}
library(data.table)
.read.csv.dt<-function(file, datadir= "./data/", sep=",", header=TRUE){
require(data.table)
if grepl("*/$",datadir) file <- paste0(datadir, "/", file)
if (length(grep("/", file))==0) file <- paste0(datadir, file)
tmp <- data.table(read.csv(file, sep=sep, header=header, fileEncoding="UTF-8-BOM"))
}
if grepl("*/$",datadir) file <- paste0(datadir, "/", file)
require(data.table)
datadir
file="bb.csv"
if grepl("*/$",datadir) file <- paste0(datadir, "/", file)
grepl("*/$",datadir)
if (grepl("*/$",datadir)) file <- paste0(datadir, "/", file)
if (length(grep("/", file))==0) file <- paste0(datadir, file)
tmp <- data.table(read.csv(file, sep=sep, header=header, fileEncoding="UTF-8-BOM"))
tmp
(grepl("*/$",datadir))
if !(grepl("*/$",datadir)) file <- paste0(datadir, "/", file)
if (length(grep("/", file))==0) file <- paste0(datadir, file)
if (!grepl("*/$",datadir)) file <- paste0(datadir, "/", file)
if (length(grep("/", file))==0) file <- paste0(datadir, file)
tmp <- data.table(read.csv(file, sep=sep, header=header, fileEncoding="UTF-8-BOM"))
datadir
(!grepl("*/$",datadir))
file="bb.csv"
if (!grepl("*/$",datadir)) file <- paste0(datadir, "/", file)
file
if (length(grep("/", file))==0) file <- paste0(datadir, file)
file
tmp <- data.table(read.csv(file, sep=sep, header=header, fileEncoding="UTF-8-BOM"))
.read.csv.dt<-function(file, datadir= "./data/", sep=",", header=TRUE){
require(data.table)
if (!grepl("*/$",datadir)) file <- paste0(datadir, "/", file)
if (length(grep("/", file))==0) file <- paste0(datadir, file)
if (!grepl("*.csv$")) file <- paste0(file, ".csv")
tmp <- data.table(read.csv(file, sep=sep, header=header, fileEncoding="UTF-8-BOM"))
}
document()
setwd("C:/Users/jrg1035/Dropbox/R/RToolsParent/")
create("JGTools")
create_package("JGTools")
roxygenize()
roxygenize()
getwd()
setwd("C:/Users/jrg1035/Dropbox/R/RToolsParent/JGTools/")
setwd("C:/Users/jrg1035/Dropbox/R/RToolsParent/JGTools/")
roxygenize()
install()
library(JGTools)
?.read.csv.dt
install.packages("processx")
install.packages("processx")
library("processx")
roxygenize()
library(roxygen2)
setwd("C:/Users/jrg1035/Dropbox/R/RToolsParent/JGTools/")
roxygenize()
install()
library("devtools")
install()
.bu()
bu
bu()
library(JGtools)
library(JGTools)
install.packages("vegan")
bu()
example(bu)
